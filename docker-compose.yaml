version: "3.9"

services:
  master:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    image: "citusdata/citus:12.0.0"
    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
#    volumes:
#      - ./preparation/create_db.sql:/docker-entrypoint-initdb.d/create_database.sql
    networks:
      - my-net
  worker:
    image: "citusdata/citus:12.0.0"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [manager]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - my-net
  manager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [master]
    environment: *AUTH
    networks:
      - my-net
#  db_postgres:
#    image: postgres:14.3-alpine
#    hostname: db_postgres
#    container_name: db_postgres
#    restart: on-failure
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    ports:
#      - "5434:5432"
#    volumes:
#      - ./preparation/create_db.sql:/docker-entrypoint-initdb.d/create_database.sql
#    networks:
#      - my-net
  fastapi_service:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: fastapi_service
    container_name: fastapi_service
    depends_on:
      master:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - my-net

  cache-redis:
    image: redis:alpine
    hostname: cache-redis
    container_name: cache-redis
    restart: on-failure
    ports:
      - '6379:6379'
    expose:
      - '6379'
    command: redis-server
    volumes:
      - cache:/data
    networks:
      - my-net

volumes:
  master:
    driver: local

  cache:
    driver: local

  healthcheck-volume:

networks:
  my-net:
    external: true